++====README for survivability.cpp and survivability executable====++

This code is designed to read input files obtained by exporting from
the Power System Graph Editor. For an explanation of these formats,
see the Input section of this readme.

====Usage Examples====

To run survivability analysis using an adjacency list input:

./survivability -a AdjacencyList.csv 

To run survivability analysis using an adjacency matrix output:
 
./survivability -m Matrix.csv

====Usage====

The general form of the usage convention is as follows: 

./survivability -(a/m) [input_file]

Here, the '-a' switch is used to indicate the input file is an adjacency
list, and the '-m' switch is used to indicate the input file is an 
adjacency matrix.

====Input====

1) Adjacency Matrix

The adjacency matrix input is a comma-separated n x n matrix, where n is 
the total number of links (ie nodes) in the power system. 
For 1 <= i,j <= n, then on row i, column j, for i not equal to j, the element 
(i,j) of the matrix is set to 1 if links i and j are directly connected,
and 0 if links i and j are not directly connected. 
Diagonal element (1,1) stores the total number of source links.
Diagonal element (2,2) stores the total number of sink links.
Diagonal element (3,3) stores the total number of horizontal links.

Below is an example of an adjacency matrix generated by the Power System
Graph Editor representing a system with n = 9 total links, 2 source
links, 1 sink link, and 6 horizontal links.

2,0,0,0,1,0,0,1,1
0,1,0,0,1,1,1,0,0
0,0,6,1,0,1,0,0,0
0,0,1,0,0,1,1,1,1
1,1,0,0,0,1,1,1,1
0,1,1,1,1,0,1,0,0
0,1,0,1,1,1,0,1,1
1,0,0,1,1,0,1,0,1
1,0,0,1,1,0,1,1,0

2) Adjacency List

The structure of the adjacency list input file consists of five lines,
and is illustrated by the example below (which is equivalent to the
adjacency matrix in the example above:)

2
1
6
3,6,8,13,19,24,30,36,42
5,8,9,5,6,7,4,6,3,6,7,8,9,2,6,7,1,8,9,3,4,2,5,7,2,5,6,4,8,9,1,5,9,4,7,9,4,7,8,1,5,8

The first three lines are integers that identifies this to be a representation
of a system with 2 source links, 1 sink link, and 6 horizontal links. The
number of total links n = 9 is then the sum of the first three rows.

Representation of connections is given in lines 4 and 5. Here, the links are referred
to by number, and ordered such that links 1-2 are source links, link 3 is a sink link,
and links 4-9 are horizontal links. We will illustrate their function referring to the example.
Line 4 is a list of indices of the comma separated list of positive integers in line 5.
Line 4's first value, 3, indicates that entries 1-3 of line 5 correspond to links to
which link 1 is adjacent; i.e., link 1 is connected to link 5, 8, and 9. The second
entry of line 4 is 6, so we know that entries 4-6 in line 5 give us the links to which
link 2 is connected; hence, link 2 is adjacent to links 5, 6, and 7. Likewise, the
third entry of line 3 is 8, and entries 7 and 8 in line 5 tell us that 
links 4 and 6 are connected to link 3. All connection information for the graph can be
read from the adjacency list input by referring to lines 4 and 5 in this fashion.

====Output====

1) probabilities.out

probabilities.out contains four columns. The first row is "m P(S) P(R) P(F)", which indicates
what each column contains. The first column, 'm', is an integer value that indicates the number
of links that are killed in the sub-topology. The second column, 'P(S)', is a value in [0,1] that
indicates the proportion of scenarios in which the sub-topology can deliver power to the sink
without reconfiguration. The third column, 'P(R)', is a value in [0,1] that represents the proportion
of scenarios in which the sub-topology can deliver power to the sink if reconfiguration is performed
on the system. The fourth column, 'P(F)', is a value in [0,1] that represents the proportion
of scenarios in which the sub-topology is completely unable to deliver power to the sink and requires
repair. An example row in a probabilities.out file is:

9, 0.785252, 0.132395, 0.0823529

This tells us that for a certain power system sub-topology with 9 links down and the rest of the links up,
the probability of delivering power to the sink without reconfiguration necessary is 0.785252, the probability
of delivering power to the sink after required reconfiguration is 0.132395, and the probability of the system
being unable to deliver power without repair is 0.0823529.

2) scenarios.out

scenarious.out contains four columns. The first row is "m S R F". Column m is an integer value that indicates 
the number of links that are down in the sub-topology. Column S indicates the total number of scenarios in which
the system can deliver power to the sink without reconfiguration. Column R indicates the total number of scenarios in which
the system can deliver power to the sink after necessary reconfiguration. Column F indicates the total number of scenarios
in which the system cannot deliver power to the sink without being repaired. An example row is then:

9, 19089, 3219, 2002

which tells us that for a certain sub-topology for 9 links that are down (and the remainder of the links are up,)
there are 19089 scenarios in which the system can deliver power to the sink without reconfiguration, 3219 scenarios
in which the system can deliver power to the sink after necessary reconfiguration, and 2002 scenarios where the system
cannot deliver power to the sink without repair.
